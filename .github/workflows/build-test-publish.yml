# Builds on all branches & PRs
# Deploys to PyPi on "release".
name: Build with and for Python

on: [push, pull_request]

jobs:
  build_mingw:
    runs-on: windows-2019
    name: Msys Wheel
    strategy:
      fail-fast: false
      matrix:
        include: [
          { msystem: MINGW64, arch: x86_64, path: mingw64, rust_target: x86_64-pc-windows-gnu, lib_dir: /mingw64/lib/, include_dir: /mingw64/include/python3.8/ },
          { msystem: MINGW32, arch: i686, path: mingw32, rust_target: i686-pc-windows-gnu, lib_dir: /mingw32/lib/, include_dir: /mingw32/include/python3.8/ }
        ]
    steps:
      - name: Install MSys2 and dependencies
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: ${{ matrix.msystem }}
          install: >-
            git
            unzip
            mingw-w64-${{ matrix.arch }}-curl
            mingw-w64-${{ matrix.arch }}-python
            mingw-w64-${{ matrix.arch }}-python-pip
            mingw-w64-${{ matrix.arch }}-python-pillow
            mingw-w64-${{ matrix.arch }}-openssl
            mingw-w64-${{ matrix.arch }}-toolchain
            mingw-w64-${{ matrix.arch }}-gettext
            mingw-w64-${{ matrix.arch }}-diffutils
      - name: Checkout
        uses: actions/checkout@v2
      - name: Note version
        shell: msys2 {0}
        run: |
          echo "PACKAGE_VERSION=$(python3 -- ./setup.py --version)" >> $GITHUB_ENV
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          target: ${{ matrix.rust_target }}
      - name: Upgrade pip, install dev dependencies
        shell: msys2 {0}
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install -r dev-requirements.txt
          python -m pip install -r requirements.txt
      - name: Fix Path and python symlink
        shell: msys2 {0}
        run: |
          ls /${{ matrix.path }}/bin
          ln -s /${{ matrix.path }}/bin/mingw*-make.exe /${{ matrix.path }}/bin/make.exe
          ln -s /${{ matrix.path }}/lib/libpython3.10.dll.a /${{ matrix.path }}/lib/libpython310.dll.a
      - name: Build Python wheels
        shell: msys2 {0}
        run: |
          PATH="$PATH:/c/Users/runneradmin/.cargo/bin" python setup.py bdist_wheel
        env:
          CARGO_BUILD_TARGET: ${{ matrix.rust_target }}
          PYO3_CROSS_LIB_DIR: ${{ matrix.lib_dir }}
          PYO3_CROSS_INCLUDE_DIR: ${{ matrix.include_dir }}
          PYO3_CROSS_PYTHON_VERSION: "3.10"
          GETTEXT_LIB_DIR: "/${{ matrix.path }}/lib/"
          GETTEXT_INCLUDE_DIR: "/${{ matrix.path }}/include/"
          GETTEXT_BIN_DIR: "/${{ matrix.path }}/bin/"
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels-msys2-py-${{ matrix.msystem }}
          path: dist/*.whl
